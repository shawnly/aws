AWSTemplateFormatVersion: '2010-09-09'
Description: 'Instance Scheduler with EventBridge'

Parameters:
  StartTime:
    Type: String
    Default: "cron(0 8 ? * MON-FRI *)"
    Description: Cron expression for start time
  
  StopTime:
    Type: String
    Default: "cron(0 18 ? * MON-FRI *)"
    Description: Cron expression for stop time
  
  TagKey:
    Type: String
    Default: "scheduled"
    Description: Tag key to identify instances
  
  TagValue:
    Type: String
    Default: "true"
    Description: Tag value to identify instances
  
  EventId:
    Type: String
    Default: "101"
    Description: Event identifier tag value

Resources:
  InstanceSchedulerFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub "${AWS::StackName}-instance-scheduler"
      Handler: index.lambda_handler
      Role: !ImportValue 
        Fn::Sub: "${AWS::StackName}-RoleArn"
      Code:
        ZipFile: |
          # Lambda function code will be replaced during deployment
      Runtime: python3.9
      Timeout: 300
      Environment:
        Variables:
          TAG_KEY: !Ref TagKey
          TAG_VALUE: !Ref TagValue
          EVENT_ID: !Ref EventId

  StartSchedule:
    Type: 'AWS::Scheduler::Schedule'
    Properties:
      Name: !Sub "${AWS::StackName}-start-schedule"
      Description: "Schedule to start tagged instances"
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpression: !Ref StartTime
      Target:
        Arn: !GetAtt InstanceSchedulerFunction.Arn
        RoleArn: !ImportValue 
          Fn::Sub: "${AWS::StackName}-RoleArn"
        Input: !Sub |
          {
            "action": "start",
            "tag_key": "${TagKey}",
            "tag_value": "${TagValue}",
            "event_id": "${EventId}"
          }

  StopSchedule:
    Type: 'AWS::Scheduler::Schedule'
    Properties:
      Name: !Sub "${AWS::StackName}-stop-schedule"
      Description: "Schedule to stop tagged instances"
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpression: !Ref StopTime
      Target:
        Arn: !GetAtt InstanceSchedulerFunction.Arn
        RoleArn: !ImportValue 
          Fn::Sub: "${AWS::StackName}-RoleArn"
        Input: !Sub |
          {
            "action": "stop",
            "tag_key": "${TagKey}",
            "tag_value": "${TagValue}",
            "event_id": "${EventId}"
          }

  LambdaPermissionStart:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !Ref InstanceSchedulerFunction
      Action: 'lambda:InvokeFunction'
      Principal: 'scheduler.amazonaws.com'
      SourceArn: !GetAtt StartSchedule.Arn

  LambdaPermissionStop:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !Ref InstanceSchedulerFunction
      Action: 'lambda:InvokeFunction'
      Principal: 'scheduler.amazonaws.com'
      SourceArn: !GetAtt StopSchedule.Arn

Outputs:
  LambdaFunctionArn:
    Description: ARN of the Instance Scheduler Lambda Function
    Value: !GetAtt InstanceSchedulerFunction.Arn