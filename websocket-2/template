.
├── README.md
├── template.yaml
├── src/
│   ├── connect/
│   │   └── app.py
│   ├── disconnect/
│   │   └── app.py
│   └── message/
│       └── app.py
├── requirements.txt
└── samconfig.toml

# template.yaml
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: WebSocket API with Lambda integration

Globals:
  Function:
    Timeout: 3
    Runtime: python3.9
    Architectures:
      - x86_64
    Environment:
      Variables:
        TABLE_NAME: !Ref ConnectionsTable
    LoggingConfig:
      LogFormat: JSON
      LogGroup: !Sub '/aws/lambda/${AWS::StackName}'
      LogLevel: INFO

Resources:
  WebSocketAPI:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: WebSocketAPI
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${AWS::StackName}-connections'
      AttributeDefinitions:
        - AttributeName: connectionId
          AttributeType: S
      KeySchema:
        - AttributeName: connectionId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  
  ConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/connect/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTable
      Events:
        WebSocketConnect:
          Type: ApiGatewayV2::WebSocket
          Properties:
            ApiId: !Ref WebSocketAPI
            RouteKey: $connect
  
  DisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/disconnect/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTable
      Events:
        WebSocketDisconnect:
          Type: ApiGatewayV2::WebSocket
          Properties:
            ApiId: !Ref WebSocketAPI
            RouteKey: $disconnect
  
  MessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/message/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTable
        - Statement:
            - Effect: Allow
              Action:
                - 'execute-api:ManageConnections'
              Resource: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocketAPI}/*'
      Events:
        WebSocketMessage:
          Type: ApiGatewayV2::WebSocket
          Properties:
            ApiId: !Ref WebSocketAPI
            RouteKey: sendmessage

Outputs:
  WebSocketURL:
    Description: "WebSocket URL"
    Value: !Sub 'wss://${WebSocketAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod'