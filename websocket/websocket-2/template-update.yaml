Resources:
  WebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: WebSocketApi
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action

  WebSocketConnectionHandler:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $connect
      AuthorizationType: NONE
      Target: !Sub arn:aws:apigateway:${AWS::Region}::lambda:path/2015-03-31/functions/${WebSocketConnectionLambda.Arn}/invocations

  WebSocketMessageHandler:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocketApi
      RouteKey: $default
      AuthorizationType: NONE
      Target: !Sub arn:aws:apigateway:${AWS::Region}::lambda:path/2015-03-31/functions/${WebSocketMessageLambda.Arn}/invocations

  WebSocketConnectionLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: connection-manager/lambda-function.lambda_handler
      Runtime: python3.9
      CodeUri: ./connection-manager/
      MemorySize: 128
      Timeout: 5
      Policies:
        - AWSLambdaBasicExecutionRole

  WebSocketMessageLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: feature-toggle-message/lambda-function.lambda_handler
      Runtime: python3.9
      CodeUri: ./feature-toggle-message/
      MemorySize: 128
      Timeout: 5
      Policies:
        - Statement:
            Effect: Allow
            Action:
              - execute-api:ManageConnections
            Resource: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*/@connections/*
        - AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          WEBSOCKET_API_URL: !Sub "https://${WebSocketApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
