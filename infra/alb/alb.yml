AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to create an ALB with security groups'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC where the ALB will be created

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets for the ALB (at least two subnets in different AZs)

  ALBSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security group ID for the ALB

  WebServerSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security group ID for the web servers

Resources:
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyApplicationLoadBalancer
      Scheme: internet-facing
      Type: application
      SecurityGroups:
        - !Ref ALBSecurityGroupId
      Subnets: !Ref Subnets
      IpAddressType: ipv4
      Tags:
        - Key: Name
          Value: MyALB

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: MyALBTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: instance
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /health
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

Outputs:
  LoadBalancerDNSName:
    Description: DNS name of the load balancer
    Value: !GetAtt ApplicationLoadBalancer.DNSName
    Export:
      Name: !Sub "${AWS::StackName}-ALBDNSName"

  LoadBalancerArn:
    Description: ARN of the load balancer
    Value: !Ref ApplicationLoadBalancer
    Export:
      Name: !Sub "${AWS::StackName}-ALBArn"
      
  TargetGroupArn:
    Description: ARN of the target group
    Value: !Ref ALBTargetGroup
    Export:
      Name: !Sub "${AWS::StackName}-TargetGroupArn"